specVersion: 0.0.4
description: Thales Sport Markets API
repository: https://github.com/thales-markets/thales-subgraph
schema:
  file: ../schema.graphql
dataSources:
  - kind: ethereum/contract
    name: SportPositionalMarketManager
    network: optimism
    source:
      address: '0xFBffEbfA2bF2cF84fdCf77917b358fC59Ff5771e'
      abi: SportPositionalMarketManager
      startBlock: 13806000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
        - Position
      abis:
        - name: SportPositionalMarketManager
          file: ../abis/SportPositionalMarketManager.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: MarketCreated(address,indexed address,indexed bytes32,string,uint256,uint256,address,address,address)
          handler: handleMarketCreated
        - event: DatesUpdatedForMarket(address,uint256,uint256)
          handler: handleDatesUpdatedForMarket
  - kind: ethereum/contract
    name: TheRundownConsumer
    network: optimism
    source:
      address: '0x2B91c14Ce9aa828eD124D12541452a017d8a2148'
      abi: TheRundownConsumer
      startBlock: 13819160
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: TheRundownConsumer
          file: ../abis/TheRundownConsumer.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: CreateSportsMarket(address,bytes32,(bytes32,uint256,int24,int24,int24,string,string),uint256[],uint256[])
          handler: handleCreateSportsMarketEvent
        - event: GameOddsAdded(bytes32,bytes32,(bytes32,int24,int24,int24),uint256[])
          handler: handleGameOddsAddedEvent
        - event: ResolveSportsMarket(address,bytes32,uint256)
          handler: handleResolveSportsMarketEvent
        - event: GameResolved(bytes32,uint256,bytes32,(bytes32,uint8,uint8,uint8),uint256)
          handler: handleGameResolvedEvent
        - event: CancelSportsMarket(address,bytes32)
          handler: handleCancelSportsMarket
  - kind: ethereum/contract
    name: TheRundownConsumerUpdatedAt
    network: optimism
    source:
      address: '0x2B91c14Ce9aa828eD124D12541452a017d8a2148'
      abi: TheRundownConsumer
      startBlock: 13819160
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: TheRundownConsumer
          file: ../abis/TheRundownConsumer_UpdatedAt.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: GameResolved(bytes32,uint256,bytes32,(bytes32,uint8,uint8,uint8,uint40),uint256)
          handler: handleGameResolvedUpdatedAtEvent
  - kind: ethereum/contract
    name: ApexConsumer
    network: optimism
    source:
      address: '0x0a6851C7D112A27019d84DCCb9cE0c0cd8b75325'
      abi: ApexConsumer
      startBlock: 23142630
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/apex-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: ApexConsumer
          file: ../abis/ApexConsumer.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: CreateSportsMarket(address,bytes32,(bytes32,string,uint256,uint256,uint256,uint256,string,string),uint256[],uint256[])
          handler: handleCreateSportsMarketEvent
        - event: GameOddsAdded(bytes32,bytes32,(bytes32,uint256,uint256,uint256),uint256[])
          handler: handleGameOddsAddedEvent
        - event: ResolveSportsMarket(address,bytes32,uint256)
          handler: handleResolveSportsMarketEvent
        - event: GameResolved(bytes32,uint256,bytes32,(bytes32,uint8,uint8,uint8))
          handler: handleGameResolvedEvent
        - event: CancelSportsMarket(address,bytes32)
          handler: handleCancelSportsMarket
        - event: GameResultsSet(bytes32,uint256,bytes32,(bytes32,string,string))
          handler: handleGameResultsSetEvent
        - event: RaceCreated(bytes32,uint256,string,(string,uint256,uint256,string,string,string))
          handler: handleRaceCreatedEvent
  - kind: ethereum/contract
    name: ApexConsumerWithPostQualifyingOdds
    network: optimism
    source:
      address: '0x0a6851C7D112A27019d84DCCb9cE0c0cd8b75325'
      abi: ApexConsumer
      startBlock: 23142630
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/apex-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: ApexConsumer
          file: ../abis/ApexConsumer_PostQualifyingOdds.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: GameOddsAdded(bytes32,bytes32,(bytes32,uint256,uint256,uint256,bool),uint256[])
          handler: handleGameWithPostQualifyingOddsAddedEvent
  - kind: ethereum/contract
    name: ApexConsumerWithBetType
    network: optimism
    source:
      address: '0x0a6851C7D112A27019d84DCCb9cE0c0cd8b75325'
      abi: ApexConsumer
      startBlock: 23142630
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/apex-mapping.ts
      entities:
        - SportMarket
        - SportMarketOddsHistory
        - Position
      abis:
        - name: ApexConsumer
          file: ../abis/ApexConsumer_GameBetType.json
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: CreateSportsMarket(address,bytes32,(bytes32,string,uint256,uint256,uint256,uint256,string,string,uint256),uint256[],uint256[])
          handler: handleCreateSportsMarketWithBetTypeEvent
  - kind: ethereum/contract
    name: SportsAMM
    network: optimism
    source:
      address: '0x170a5714112daEfF20E798B6e92e25B86Ea603C1'
      abi: SportsAMM
      startBlock: 13809240
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/amm-mapping.ts
      entities:
        - MarketTransaction
      abis:
        - name: SportsAMM
          file: ../abis/SportsAMM.json
      eventHandlers:
        - event: BoughtFromAmm(address,address,uint8,uint256,uint256,address,address)
          handler: handleBoughtFromAmmEvent
        - event: SoldToAMM(address,address,uint8,uint256,uint256,address,address)
          handler: handleSoldToAMMEvent
  - kind: ethereum/contract
    name: OvertimeVoucher
    network: optimism
    source:
      address: '0xF29Ba1A2F947D3c416382Dd853a1831e0d31DE9A'
      abi: OvertimeVoucher
      startBlock: 35727801
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/overtime-voucher-mapping.ts
      entities:
        - OvertimeVoucher
      abis:
        - name: OvertimeVoucher
          file: ../abis/OvertimeVoucher.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: BoughtFromAmmWithVoucher(address,address,uint8,uint256,uint256,address,address)
          handler: handleBoughtFromAmmWithVoucherEvent
  - kind: ethereum/contract
    name: SportVault
    network: optimism
    source:
      address: '0xc922f4CDe42dD658A7D3EA852caF7Eae47F6cEcd'
      abi: SportVault
      startBlock: 34066512
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/sport-vault-mapping.ts
      entities:
        - SportVault
      abis:
        - name: SportVault
          file: ../abis/SportVault.json
      eventHandlers:
        - event: TradeExecuted(address,uint8,uint256,uint256)
          handler: handleVaultTrade
        - event: RoundClosed(uint256,uint256)
          handler: handleRoundClosed
templates:
  - name: SportMarket
    kind: ethereum/contract
    network: optimism
    source:
      abi: SportMarket
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - ClaimTx
      abis:
        - name: SportMarket
          file: ../abis/SportMarket.json
      eventHandlers:
        - event: OptionsExercised(indexed address,uint256)
          handler: handleOptionsExercised
        - event: MarketResolved(uint8,uint256,uint256,uint256)
          handler: handleMarketResolved
        - event: PauseUpdated(bool)
          handler: handleMarketPauseUpdated
  - name: Position
    kind: ethereum/contract
    network: optimism
    source:
      abi: Position
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      file: ../src/thales-sport-markets-mapping.ts
      entities:
        - PositionBalance
      abis:
        - name: Position
          file: ../abis/SportPosition.json
